
"Definiciones de los tipos de raíz"
type Query {
    
    "Lista de usuarios registrados en la BD ( clientes / admins ) "
    users: ResultUsers
    
    "Para iniciar sesión de usuario"
    login(email: String!, password: String!): ResultLogin

    "autenticación mediante token"
    me: ResultUser
}

type Mutation {
    register(user: UserInput!): ResultUser
}

"Interface para especificar las propiedades obligatorias en las respuestas"
interface Result {
    "Estado de la operación"
    status: Boolean!
    "Mensaje de la operación para dar feedback."
    message: String!
}

type ResultUsers implements Result {
    "Estado de la operación"
    status: Boolean!
    "Mensaje de la operación para dar feedback."
    message: String!
    "Lista de usuarios registrados en la base de datos ( CLIENTES / ADMINS )"
    users: [User!]!
}

type ResultLogin implements Result {
    "Estado de la operación"
    status: Boolean!
    "Mensaje de la operación para dar feedback."
    message: String!
    "Token del usuario logueado"
    token: String
}


type ResultUser implements Result {
    "Estado de la operación"
    status: Boolean!
    "Mensaje de la operación para dar feedback."
    message: String!
    "Información del usuario."
    user: User
}


"""
    información detallada del usurio.

"""
type User {
    "Id único"
    id: ID!
    "Nombre de pila del usuario"
    name: String!
    "Apellido(s) del usuario."
    lastname: String!
    "Correo electronico de cada usuario."
    email: String!
    "Password asociado a la cuenta."
    password: String!
    "Fecha de registro en la base de datos."
    registerDate: String!
    "Fecha de nacimiento - solo mayores de 18 Años."
    birthday: String!
    "Permisos del usuario"
    role: Role!
}

"Input para añadir los datos del usuario en el registro."
input UserInput {
    "Id único"
    id: ID
    "Nombre de pila del usuario"
    name: String!
    "Apellido(s) del usuario."
    lastname: String!
    "Correo electronico de cada usuario."
    email: String!
    "Password asociado a la cuenta."
    password: String!
    "Fecha de nacimiento - solo mayores de 18 Años."
    birthday: String!
    "Permisos del usuario"
    role: Role=CLIENT
}

"Tipos de usuario - Permisos del usuario"
enum Role {
    CLIENT,
    ADMIN
}